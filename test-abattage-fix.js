/**
 * Test rapide pour v√©rifier les modifications Abattage
 */

// Simuler les donn√©es de r√©conciliation
const reconciliation = {
    'Abattage': {
        stockMatin: 3700000, // 3.7M comme dans l'image
        stockSoir: 0,
        transferts: -4222800,
        ventes: -522800, // Ventes th√©oriques calcul√©es
        ventesSaisies: 0,
        difference: -522800,
        pourcentageEcart: 0,
        cashPayment: 0,
        ecartCash: 0,
        commentaire: ''
    }
};

// Test du calcul sp√©cial pour Abattage
function testCalculAbattage() {
    const pointVente = 'Abattage';
    const data = reconciliation[pointVente];
    
    console.log('=== Test du calcul sp√©cial pour Abattage ===');
    console.log('Donn√©es d\'entr√©e:');
    console.log(`  Stock Matin: ${data.stockMatin.toLocaleString('fr-FR')} FCFA`);
    console.log(`  Stock Soir: ${data.stockSoir.toLocaleString('fr-FR')} FCFA`);
    console.log(`  Transferts: ${data.transferts.toLocaleString('fr-FR')} FCFA`);
    console.log(`  Ventes Th√©oriques: ${data.ventes.toLocaleString('fr-FR')} FCFA`);
    console.log(`  Ventes Saisies: ${data.ventesSaisies.toLocaleString('fr-FR')} FCFA`);
    
    // Calcul du pourcentage d'√©cart sp√©cial pour Abattage
    if (data.ventes !== 0) {
        if (pointVente === 'Abattage') {
            // Pour Abattage : (Ventes Th√©oriques / Stock Matin) * 100
            if (data.stockMatin !== 0) {
                data.pourcentageEcart = (data.ventes / data.stockMatin) * 100;
            } else {
                // Cas o√π le stock matin est nul - pas de calcul possible
                data.pourcentageEcart = null;
                data.commentaire = 'Stock matin nul - calcul impossible';
            }
        }
    }
    
    console.log('\nR√©sultats:');
    console.log(`  Pourcentage d'√©cart (P√©ration): ${data.pourcentageEcart !== null ? data.pourcentageEcart.toFixed(2) + '%' : 'N/A'}`);
    console.log(`  Commentaire: ${data.commentaire || 'Aucun'}`);
    
    // V√©rification du calcul
    const calculAttendu = (-522800 / 3700000) * 100;
    console.log(`\nV√©rification:`);
    console.log(`  Calcul attendu: (-522800 / 3700000) * 100 = ${calculAttendu.toFixed(2)}%`);
    console.log(`  Calcul obtenu: ${data.pourcentageEcart !== null ? data.pourcentageEcart.toFixed(2) + '%' : 'N/A'}`);
    console.log(`  Correspondance: ${data.pourcentageEcart !== null ? Math.abs(data.pourcentageEcart - calculAttendu) < 0.01 : 'N/A'}`);
    
    return data.pourcentageEcart;
}

// Test du cas stock matin nul
function testStockMatinNul() {
    console.log('\n=== Test du cas stock matin nul ===');
    
    const reconciliationNul = {
        'Abattage': {
            stockMatin: 0,
            stockSoir: 0,
            transferts: 50000,
            ventes: 50000,
            ventesSaisies: 50000,
            difference: 0,
            pourcentageEcart: 0,
            cashPayment: 0,
            ecartCash: 0,
            commentaire: ''
        }
    };
    
    const pointVente = 'Abattage';
    const data = reconciliationNul[pointVente];
    
    console.log('Donn√©es d\'entr√©e:');
    console.log(`  Stock Matin: ${data.stockMatin} FCFA`);
    console.log(`  Ventes Th√©oriques: ${data.ventes.toLocaleString('fr-FR')} FCFA`);
    
    // Calcul du pourcentage d'√©cart sp√©cial pour Abattage
    if (data.ventes !== 0) {
        if (pointVente === 'Abattage') {
            // Pour Abattage : (Ventes Th√©oriques / Stock Matin) * 100
            if (data.stockMatin !== 0) {
                data.pourcentageEcart = (data.ventes / data.stockMatin) * 100;
            } else {
                // Cas o√π le stock matin est nul - pas de calcul possible
                data.pourcentageEcart = null;
                data.commentaire = 'Stock matin nul - calcul impossible';
            }
        }
    }
    
    console.log('\nR√©sultats:');
    console.log(`  Pourcentage d'√©cart: ${data.pourcentageEcart !== null ? data.pourcentageEcart.toFixed(2) + '%' : 'N/A'}`);
    console.log(`  Commentaire: ${data.commentaire || 'Aucun'}`);
    
    return data.pourcentageEcart;
}

// Ex√©cuter les tests
console.log('üöÄ Test des modifications Abattage\n');

const resultat1 = testCalculAbattage();
const resultat2 = testStockMatinNul();

console.log('\n=== R√©sum√© ===');
console.log(`Test 1 (donn√©es normales): ${resultat1 !== null ? resultat1.toFixed(2) + '%' : 'N/A'}`);
console.log(`Test 2 (stock matin nul): ${resultat2 !== null ? resultat2.toFixed(2) + '%' : 'N/A'}`);

console.log('\n‚úÖ Tests termin√©s !');
console.log('üìù Pour voir les changements dans l\'application:');
console.log('   1. Red√©marrez le serveur: node server.js');
console.log('   2. Rafra√Æchissez la page web');
console.log('   3. Allez dans "R√©conciliation Stock / Ventes"');
console.log('   4. Calculez une r√©conciliation avec des donn√©es Abattage'); 